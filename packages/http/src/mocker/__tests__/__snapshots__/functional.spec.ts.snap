// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`http mocker request is invalid returns 400 and static error response 1`] = `
Object {
  "body": Array [
    Object {
      "message": "error",
    },
  ],
  "headers": Object {
    "Content-type": "application/json",
  },
  "statusCode": 400,
}
`;

exports[`http mocker request is valid HttpOperation contains example return lowest 2xx code and match response example to media type accepted by request 1`] = `
Object {
  "body": Array [
    Object {
      "completed": true,
      "id": 1,
      "name": "make prism",
    },
  ],
  "headers": Object {
    "Content-type": "application/json",
  },
  "statusCode": 200,
}
`;

exports[`http mocker request is valid HttpOperation contains example return lowest 2xx response and the first example matching the media type 1`] = `
Object {
  "body": "<todo><name>Shopping</name><completed>false</completed></todo>",
  "headers": Object {
    "Content-type": "application/xml",
  },
  "statusCode": 200,
}
`;

exports[`http mocker request is valid HttpOperation contains example the media type requested does not match the example return lowest 2xx, first example and matching media type 1`] = `
Object {
  "body": "{ \\"root\\": \\"first\\" }",
  "headers": Object {
    "Content-type": "application/xml",
  },
  "statusCode": 200,
}
`;

exports[`http mocker request is valid given enforced example key and mediaType should return 200 response 1`] = `
Object {
  "body": "{ \\"root\\": \\"second\\" }",
  "headers": Object {
    "Content-type": "application/xml",
  },
  "statusCode": 200,
}
`;

exports[`http mocker request is valid given enforced example key should return application/json, 200 response 1`] = `
Object {
  "body": Array [
    Object {
      "completed": false,
      "id": 2,
      "name": "make bears",
    },
  ],
  "headers": Object {
    "Content-type": "application/json",
  },
  "statusCode": 200,
}
`;

exports[`http mocker request is valid given enforced status code and contentType and exampleKey should return the matching example 1`] = `
Object {
  "body": "<root>second</root>",
  "headers": Object {
    "Content-type": "application/xml",
  },
  "statusCode": 201,
}
`;

exports[`http mocker request is valid given enforced status code and contentType should return the first matching example 1`] = `
Object {
  "body": "<root>first</root>",
  "headers": Object {
    "Content-type": "application/xml",
  },
  "statusCode": 201,
}
`;

exports[`http mocker request is valid given enforced status code and example key should return application/json example 1`] = `
Object {
  "body": "{ \\"root\\": \\"second\\" }",
  "headers": Object {
    "Content-type": "application/json",
  },
  "statusCode": 201,
}
`;

exports[`http mocker request is valid given enforced status code should return the first matching example of application/json 1`] = `
Object {
  "body": "{ \\"root\\": \\"first\\" }",
  "headers": Object {
    "Content-type": "application/json",
  },
  "statusCode": 201,
}
`;
